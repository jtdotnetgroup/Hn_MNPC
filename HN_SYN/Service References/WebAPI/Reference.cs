//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HN_SYN.WebAPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebAPI.IAPIService")]
    public interface IAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Login", ReplyAction="http://tempuri.org/IAPIService/LoginResponse")]
        hn.Core.Model.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Login", ReplyAction="http://tempuri.org/IAPIService/LoginResponse")]
        System.Threading.Tasks.Task<hn.Core.Model.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ModifyPassword", ReplyAction="http://tempuri.org/IAPIService/ModifyPasswordResponse")]
        string ModifyPassword(string id, string oldpwd, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ModifyPassword", ReplyAction="http://tempuri.org/IAPIService/ModifyPasswordResponse")]
        System.Threading.Tasks.Task<string> ModifyPasswordAsync(string id, string oldpwd, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDics", ReplyAction="http://tempuri.org/IAPIService/GetDicsResponse")]
        hn.DataAccess.Model.SYS_SUBDICSMODEL[] GetDics(string categorycode, string keyword, bool all);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDics", ReplyAction="http://tempuri.org/IAPIService/GetDicsResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.SYS_SUBDICSMODEL[]> GetDicsAsync(string categorycode, string keyword, bool all);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getTHD", ReplyAction="http://tempuri.org/IAPIService/getTHDResponse")]
        hn.DataAccess.Model.v_thdModel getTHD(string thdbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getTHD", ReplyAction="http://tempuri.org/IAPIService/getTHDResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.v_thdModel> getTHDAsync(string thdbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getLeftNum_THD", ReplyAction="http://tempuri.org/IAPIService/getLeftNum_THDResponse")]
        decimal getLeftNum_THD(string thdbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getLeftNum_THD", ReplyAction="http://tempuri.org/IAPIService/getLeftNum_THDResponse")]
        System.Threading.Tasks.Task<decimal> getLeftNum_THDAsync(string thdbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPremiseList", ReplyAction="http://tempuri.org/IAPIService/GetPremiseListResponse")]
        hn.DataAccess.model.V_PREMISEModel[] GetPremiseList(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPremiseList", ReplyAction="http://tempuri.org/IAPIService/GetPremiseListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.V_PREMISEModel[]> GetPremiseListAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetBrandList", ReplyAction="http://tempuri.org/IAPIService/GetBrandListResponse")]
        hn.DataAccess.Model.TB_BrandModel[] GetBrandList(hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetBrandList", ReplyAction="http://tempuri.org/IAPIService/GetBrandListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.TB_BrandModel[]> GetBrandListAsync(hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetClientAccountList", ReplyAction="http://tempuri.org/IAPIService/GetClientAccountListResponse")]
        hn.DataAccess.Model.V_CLIENTACCOUNTModel[] GetClientAccountList(string brandid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetClientAccountList", ReplyAction="http://tempuri.org/IAPIService/GetClientAccountListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_CLIENTACCOUNTModel[]> GetClientAccountListAsync(string brandid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetExpressCompanyList", ReplyAction="http://tempuri.org/IAPIService/GetExpressCompanyListResponse")]
        hn.DataAccess.Model.TB_EXPRESSCOMPANYModel[] GetExpressCompanyList(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetExpressCompanyList", ReplyAction="http://tempuri.org/IAPIService/GetExpressCompanyListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.TB_EXPRESSCOMPANYModel[]> GetExpressCompanyListAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetProductList", ReplyAction="http://tempuri.org/IAPIService/GetProductListResponse")]
        hn.DataAccess.model.ProductViewModel[] GetProductList(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetProductList", ReplyAction="http://tempuri.org/IAPIService/GetProductListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.ProductViewModel[]> GetProductListAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSrcList", ReplyAction="http://tempuri.org/IAPIService/GetSrcListResponse")]
        hn.DataAccess.Model.SRCModel[] GetSrcList(string productid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSrcList", ReplyAction="http://tempuri.org/IAPIService/GetSrcListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.SRCModel[]> GetSrcListAsync(string productid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetProvince", ReplyAction="http://tempuri.org/IAPIService/GetProvinceResponse")]
        hn.DataAccess.model.TB_EBPLModel[] GetProvince();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetProvince", ReplyAction="http://tempuri.org/IAPIService/GetProvinceResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetProvinceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetCity", ReplyAction="http://tempuri.org/IAPIService/GetCityResponse")]
        hn.DataAccess.model.TB_EBPLModel[] GetCity(string provinceid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetCity", ReplyAction="http://tempuri.org/IAPIService/GetCityResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetCityAsync(string provinceid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDistrict", ReplyAction="http://tempuri.org/IAPIService/GetDistrictResponse")]
        hn.DataAccess.model.TB_EBPLModel[] GetDistrict(string cityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDistrict", ReplyAction="http://tempuri.org/IAPIService/GetDistrictResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetDistrictAsync(string cityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getProductView", ReplyAction="http://tempuri.org/IAPIService/getProductViewResponse")]
        hn.DataAccess.model.ProductViewModel getProductView(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/getProductView", ReplyAction="http://tempuri.org/IAPIService/getProductViewResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.ProductViewModel> getProductViewAsync(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSingleDics", ReplyAction="http://tempuri.org/IAPIService/GetSingleDicsResponse")]
        hn.DataAccess.Model.SYS_SUBDICSMODEL GetSingleDics(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSingleDics", ReplyAction="http://tempuri.org/IAPIService/GetSingleDicsResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.SYS_SUBDICSMODEL> GetSingleDicsAsync(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliverBaseList", ReplyAction="http://tempuri.org/IAPIService/GetDeliverBaseListResponse")]
        hn.DataAccess.model.TB_DELIVER_BASEModel[] GetDeliverBaseList(string brandid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliverBaseList", ReplyAction="http://tempuri.org/IAPIService/GetDeliverBaseListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_DELIVER_BASEModel[]> GetDeliverBaseListAsync(string brandid, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetClientAccountSingle", ReplyAction="http://tempuri.org/IAPIService/GetClientAccountSingleResponse")]
        hn.DataAccess.Model.V_CLIENTACCOUNTModel GetClientAccountSingle(string clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetClientAccountSingle", ReplyAction="http://tempuri.org/IAPIService/GetClientAccountSingleResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_CLIENTACCOUNTModel> GetClientAccountSingleAsync(string clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanListResponse")]
        hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanList(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanListAsync(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImportResponse")]
        hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport(hn.Core.Model.User loginUser, string strQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImportResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImportAsync(hn.Core.Model.User loginUser, string strQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport2", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImport2Response")]
        hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport2(hn.Core.Model.User loginUser, string strQuery, string brandid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport2", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImport2Response")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImport2Async(hn.Core.Model.User loginUser, string strQuery, string brandid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport3", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImport3Response")]
        hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport3(hn.Core.Model.User loginUser, hn.Common.Cls_query.P_QueryOrder pquery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanImport3", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanImport3Response")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImport3Async(hn.Core.Model.User loginUser, hn.Common.Cls_query.P_QueryOrder pquery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanModel", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanModelResponse")]
        hn.DataAccess.Model.V_ICPRBILLMODEL GetPurchasePlanModel(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanModel", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanModelResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL> GetPurchasePlanModelAsync(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanEntryList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanEntryListResponse")]
        hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] GetPurchasePlanEntryList(string icprbillid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanEntryList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanEntryListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> GetPurchasePlanEntryListAsync(string icprbillid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanEntryByDeliveryList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanEntryByDeliveryListResponse")]
        hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] GetPurchasePlanEntryByDeliveryList(hn.Core.Model.User loginUser, string productinfo, string classarea2name, string premiseid, string brand, string deliveryaddr, string typename, string billno, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPurchasePlanEntryByDeliveryList", ReplyAction="http://tempuri.org/IAPIService/GetPurchasePlanEntryByDeliveryListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> GetPurchasePlanEntryByDeliveryListAsync(hn.Core.Model.User loginUser, string productinfo, string classarea2name, string premiseid, string brand, string deliveryaddr, string typename, string billno, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ConfirmSave", ReplyAction="http://tempuri.org/IAPIService/ConfirmSaveResponse")]
        bool ConfirmSave(string action, hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ConfirmSave", ReplyAction="http://tempuri.org/IAPIService/ConfirmSaveResponse")]
        System.Threading.Tasks.Task<bool> ConfirmSaveAsync(string action, hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/CloseSave", ReplyAction="http://tempuri.org/IAPIService/CloseSaveResponse")]
        bool CloseSave(hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/CloseSave", ReplyAction="http://tempuri.org/IAPIService/CloseSaveResponse")]
        System.Threading.Tasks.Task<bool> CloseSaveAsync(hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStockList", ReplyAction="http://tempuri.org/IAPIService/GetStockListResponse")]
        System.Data.DataTable GetStockList(string productname, string stockname, string productnumber, string wdr, string batchno, string brand, string mode, string colorno, bool isfactory, bool istrust);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStockList", ReplyAction="http://tempuri.org/IAPIService/GetStockListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetStockListAsync(string productname, string stockname, string productnumber, string wdr, string batchno, string brand, string mode, string colorno, bool isfactory, bool istrust);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStockListMN", ReplyAction="http://tempuri.org/IAPIService/GetStockListMNResponse")]
        MApiModel.recApi2.Rootobject GetStockListMN(MApiModel.api2.Rootobject getapi2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStockListMN", ReplyAction="http://tempuri.org/IAPIService/GetStockListMNResponse")]
        System.Threading.Tasks.Task<MApiModel.recApi2.Rootobject> GetStockListMNAsync(MApiModel.api2.Rootobject getapi2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetAttachmentList", ReplyAction="http://tempuri.org/IAPIService/GetAttachmentListResponse")]
        hn.DataAccess.Model.TB_ATTACHMENTModel[] GetAttachmentList(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetAttachmentList", ReplyAction="http://tempuri.org/IAPIService/GetAttachmentListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.TB_ATTACHMENTModel[]> GetAttachmentListAsync(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateICPRBILL", ReplyAction="http://tempuri.org/IAPIService/UpdateICPRBILLResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPRBILLMODEL))]
        int UpdateICPRBILL(hn.DataAccess.Model.ICPRBILLMODEL model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateICPRBILL", ReplyAction="http://tempuri.org/IAPIService/UpdateICPRBILLResponse")]
        System.Threading.Tasks.Task<int> UpdateICPRBILLAsync(hn.DataAccess.Model.ICPRBILLMODEL model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/RefrshPriceNumberList", ReplyAction="http://tempuri.org/IAPIService/RefrshPriceNumberListResponse")]
        hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] RefrshPriceNumberList(string icprbillid, string[] entryids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/RefrshPriceNumberList", ReplyAction="http://tempuri.org/IAPIService/RefrshPriceNumberListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> RefrshPriceNumberListAsync(string icprbillid, string[] entryids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPriceNumberListByItemID", ReplyAction="http://tempuri.org/IAPIService/GetPriceNumberListByItemIDResponse")]
        hn.DataAccess.model.TB_PRICEPOLICYModel[] GetPriceNumberListByItemID(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPriceNumberListByItemID", ReplyAction="http://tempuri.org/IAPIService/GetPriceNumberListByItemIDResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_PRICEPOLICYModel[]> GetPriceNumberListByItemIDAsync(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPriceNumberListByBrandID", ReplyAction="http://tempuri.org/IAPIService/GetPriceNumberListByBrandIDResponse")]
        hn.DataAccess.model.TB_PRICEPOLICYModel[] GetPriceNumberListByBrandID(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetPriceNumberListByBrandID", ReplyAction="http://tempuri.org/IAPIService/GetPriceNumberListByBrandIDResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.model.TB_PRICEPOLICYModel[]> GetPriceNumberListByBrandIDAsync(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetNewBillNo", ReplyAction="http://tempuri.org/IAPIService/GetNewBillNoResponse")]
        string GetNewBillNo(string billtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetNewBillNo", ReplyAction="http://tempuri.org/IAPIService/GetNewBillNoResponse")]
        System.Threading.Tasks.Task<string> GetNewBillNoAsync(string billtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeleteGroupBill", ReplyAction="http://tempuri.org/IAPIService/DeleteGroupBillResponse")]
        bool DeleteGroupBill(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeleteGroupBill", ReplyAction="http://tempuri.org/IAPIService/DeleteGroupBillResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupBillAsync(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeliveryBillSave", ReplyAction="http://tempuri.org/IAPIService/DeliveryBillSaveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICSEOUTBILLMODEL))]
        bool DeliveryBillSave(hn.DataAccess.Model.ICSEOUTBILLMODEL model, hn.DataAccess.Model.ICSEOUTBILLENTRYMODEL[] entrys, bool delivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeliveryBillSave", ReplyAction="http://tempuri.org/IAPIService/DeliveryBillSaveResponse")]
        System.Threading.Tasks.Task<bool> DeliveryBillSaveAsync(hn.DataAccess.Model.ICSEOUTBILLMODEL model, hn.DataAccess.Model.ICSEOUTBILLENTRYMODEL[] entrys, bool delivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateIdentification", ReplyAction="http://tempuri.org/IAPIService/UpdateIdentificationResponse")]
        bool UpdateIdentification(string ids, string centent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateIdentification", ReplyAction="http://tempuri.org/IAPIService/UpdateIdentificationResponse")]
        System.Threading.Tasks.Task<bool> UpdateIdentificationAsync(string ids, string centent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryList", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryListResponse")]
        hn.DataAccess.Model.V_ICSEOUTBILLMODEL[] GetDeliveryList(
                    hn.Core.Model.User loginUser, 
                    string brand, 
                    string classarea2name, 
                    string premiseid, 
                    int status, 
                    string car, 
                    string stock, 
                    string account, 
                    string expresscompany, 
                    string factotryno, 
                    string billno, 
                    string groupno, 
                    string projectname, 
                    string startdate, 
                    string enddate, 
                    bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryList", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLMODEL[]> GetDeliveryListAsync(
                    hn.Core.Model.User loginUser, 
                    string brand, 
                    string classarea2name, 
                    string premiseid, 
                    int status, 
                    string car, 
                    string stock, 
                    string account, 
                    string expresscompany, 
                    string factotryno, 
                    string billno, 
                    string groupno, 
                    string projectname, 
                    string startdate, 
                    string enddate, 
                    bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryEntryList", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryEntryListResponse")]
        hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[] GetDeliveryEntryList(string billid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryEntryList", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryEntryListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[]> GetDeliveryEntryListAsync(string billid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeleteDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/DeleteDeliveryByIDsResponse")]
        int DeleteDeliveryByIDs(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/DeleteDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/DeleteDeliveryByIDsResponse")]
        System.Threading.Tasks.Task<int> DeleteDeliveryByIDsAsync(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/AuditDeliveryByIDsResponse")]
        int AuditDeliveryByIDs(string ids, int status, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/AuditDeliveryByIDsResponse")]
        System.Threading.Tasks.Task<int> AuditDeliveryByIDsAsync(string ids, int status, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditAntiDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/AuditAntiDeliveryByIDsResponse")]
        int AuditAntiDeliveryByIDs(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditAntiDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/AuditAntiDeliveryByIDsResponse")]
        System.Threading.Tasks.Task<int> AuditAntiDeliveryByIDsAsync(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SyncDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/SyncDeliveryByIDsResponse")]
        string SyncDeliveryByIDs(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SyncDeliveryByIDs", ReplyAction="http://tempuri.org/IAPIService/SyncDeliveryByIDsResponse")]
        System.Threading.Tasks.Task<string> SyncDeliveryByIDsAsync(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SyncDeliveryByIDsMN", ReplyAction="http://tempuri.org/IAPIService/SyncDeliveryByIDsMNResponse")]
        string SyncDeliveryByIDsMN(string strJson, string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SyncDeliveryByIDsMN", ReplyAction="http://tempuri.org/IAPIService/SyncDeliveryByIDsMNResponse")]
        System.Threading.Tasks.Task<string> SyncDeliveryByIDsMNAsync(string strJson, string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryEntryByGroupNo", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryEntryByGroupNoResponse")]
        hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[] GetDeliveryEntryByGroupNo(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryEntryByGroupNo", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryEntryByGroupNoResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[]> GetDeliveryEntryByGroupNoAsync(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryByGroupNo", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryByGroupNoResponse")]
        hn.DataAccess.Model.V_ICSEOUTBILLMODEL[] GetDeliveryByGroupNo(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDeliveryByGroupNo", ReplyAction="http://tempuri.org/IAPIService/GetDeliveryByGroupNoResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLMODEL[]> GetDeliveryByGroupNoAsync(string groupno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSrcModelByItemID", ReplyAction="http://tempuri.org/IAPIService/GetSrcModelByItemIDResponse")]
        hn.DataAccess.Model.SRCModel GetSrcModelByItemID(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSrcModelByItemID", ReplyAction="http://tempuri.org/IAPIService/GetSrcModelByItemIDResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.SRCModel> GetSrcModelByItemIDAsync(string itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateGetDeliveryEntryData", ReplyAction="http://tempuri.org/IAPIService/UpdateGetDeliveryEntryDataResponse")]
        bool UpdateGetDeliveryEntryData(string id, decimal commitqty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateGetDeliveryEntryData", ReplyAction="http://tempuri.org/IAPIService/UpdateGetDeliveryEntryDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateGetDeliveryEntryDataAsync(string id, decimal commitqty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDismantlingNo", ReplyAction="http://tempuri.org/IAPIService/GetDismantlingNoResponse")]
        string GetDismantlingNo(string no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetDismantlingNo", ReplyAction="http://tempuri.org/IAPIService/GetDismantlingNoResponse")]
        System.Threading.Tasks.Task<string> GetDismantlingNoAsync(string no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateDeliveryGroupStatus", ReplyAction="http://tempuri.org/IAPIService/UpdateDeliveryGroupStatusResponse")]
        string UpdateDeliveryGroupStatus(string ids, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UpdateDeliveryGroupStatus", ReplyAction="http://tempuri.org/IAPIService/UpdateDeliveryGroupStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateDeliveryGroupStatusAsync(string ids, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ContractCar", ReplyAction="http://tempuri.org/IAPIService/ContractCarResponse")]
        string ContractCar(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ContractCar", ReplyAction="http://tempuri.org/IAPIService/ContractCarResponse")]
        System.Threading.Tasks.Task<string> ContractCarAsync(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SaveICPOBILL", ReplyAction="http://tempuri.org/IAPIService/SaveICPOBILLResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPOBILLMODEL))]
        string SaveICPOBILL(hn.DataAccess.Model.ICPOBILLMODEL ICPOBILL, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] ICPOBILLENTRYList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/SaveICPOBILL", ReplyAction="http://tempuri.org/IAPIService/SaveICPOBILLResponse")]
        System.Threading.Tasks.Task<string> SaveICPOBILLAsync(hn.DataAccess.Model.ICPOBILLMODEL ICPOBILL, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] ICPOBILLENTRYList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetOrderList", ReplyAction="http://tempuri.org/IAPIService/GetOrderListResponse")]
        hn.DataAccess.Model.V_ICPOBILLMODEL[] GetOrderList(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetOrderList", ReplyAction="http://tempuri.org/IAPIService/GetOrderListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPOBILLMODEL[]> GetOrderListAsync(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetOrderEntryList", ReplyAction="http://tempuri.org/IAPIService/GetOrderEntryListResponse")]
        hn.DataAccess.Model.V_ICPOBILLENTRYMODEL[] GetOrderEntryList(string icprbillid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetOrderEntryList", ReplyAction="http://tempuri.org/IAPIService/GetOrderEntryListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPOBILLENTRYMODEL[]> GetOrderEntryListAsync(string icprbillid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSingleOrder", ReplyAction="http://tempuri.org/IAPIService/GetSingleOrderResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPOBILLMODEL))]
        hn.DataAccess.Model.ICPOBILLMODEL GetSingleOrder(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetSingleOrder", ReplyAction="http://tempuri.org/IAPIService/GetSingleOrderResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.ICPOBILLMODEL> GetSingleOrderAsync(string icprbillid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLList", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListResponse")]
        hn.DataAccess.Model.ICPO_BOLentryModel[] GeICPO_BOLList(hn.Core.Model.User loginUser, string FPObillno, string Ficbolno, int FSYNCSTATUS, string FACCOUNT, string FITEMID, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLList", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.ICPO_BOLentryModel[]> GeICPO_BOLListAsync(hn.Core.Model.User loginUser, string FPObillno, string Ficbolno, int FSYNCSTATUS, string FACCOUNT, string FITEMID, string startdate, string enddate, bool searchclose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStartDate_syn", ReplyAction="http://tempuri.org/IAPIService/GetStartDate_synResponse")]
        string GetStartDate_syn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GetStartDate_syn", ReplyAction="http://tempuri.org/IAPIService/GetStartDate_synResponse")]
        System.Threading.Tasks.Task<string> GetStartDate_synAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLListMN_syn", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListMN_synResponse")]
        string GeICPO_BOLListMN_syn(System.DateTime starttime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLListMN_syn", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListMN_synResponse")]
        System.Threading.Tasks.Task<string> GeICPO_BOLListMN_synAsync(System.DateTime starttime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLListMN_db", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListMN_dbResponse")]
        hn.DataAccess.Model.v_thdModel[] GeICPO_BOLListMN_db(MApiModel.api8.Rootobject getapi8);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/GeICPO_BOLListMN_db", ReplyAction="http://tempuri.org/IAPIService/GeICPO_BOLListMN_dbResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.v_thdModel[]> GeICPO_BOLListMN_dbAsync(MApiModel.api8.Rootobject getapi8);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ConfirmSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/ConfirmSave_ICPOResponse")]
        bool ConfirmSave_ICPO(string action, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/ConfirmSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/ConfirmSave_ICPOResponse")]
        System.Threading.Tasks.Task<bool> ConfirmSave_ICPOAsync(string action, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/CloseSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/CloseSave_ICPOResponse")]
        bool CloseSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/CloseSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/CloseSave_ICPOResponse")]
        System.Threading.Tasks.Task<bool> CloseSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/AuditSave_ICPOResponse")]
        bool AuditSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/AuditSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/AuditSave_ICPOResponse")]
        System.Threading.Tasks.Task<bool> AuditSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UnAuditSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/UnAuditSave_ICPOResponse")]
        bool UnAuditSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/UnAuditSave_ICPO", ReplyAction="http://tempuri.org/IAPIService/UnAuditSave_ICPOResponse")]
        System.Threading.Tasks.Task<bool> UnAuditSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_InsertICPOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_InsertICPOEntryResponse")]
        string Remote_InsertICPOEntry(MApiModel.api3.Rootobject getapi3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_InsertICPOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_InsertICPOEntryResponse")]
        System.Threading.Tasks.Task<string> Remote_InsertICPOEntryAsync(MApiModel.api3.Rootobject getapi3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_GetICPOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_GetICPOEntryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPOBILLMODEL))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPOBILLENTRYMODEL))]
        HN_SYN.WebAPI.Remote_GetICPOEntryResponse Remote_GetICPOEntry(HN_SYN.WebAPI.Remote_GetICPOEntryRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_GetICPOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_GetICPOEntryResponse")]
        System.Threading.Tasks.Task<HN_SYN.WebAPI.Remote_GetICPOEntryResponse> Remote_GetICPOEntryAsync(HN_SYN.WebAPI.Remote_GetICPOEntryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_GetICPO_BOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_GetICPO_BOEntryResponse")]
        hn.DataAccess.Model.ICPO_BOLentryModel[] Remote_GetICPO_BOEntry(string fbillno, string entryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_GetICPO_BOEntry", ReplyAction="http://tempuri.org/IAPIService/Remote_GetICPO_BOEntryResponse")]
        System.Threading.Tasks.Task<hn.DataAccess.Model.ICPO_BOLentryModel[]> Remote_GetICPO_BOEntryAsync(string fbillno, string entryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_SetICPO_BOEntryStatus", ReplyAction="http://tempuri.org/IAPIService/Remote_SetICPO_BOEntryStatusResponse")]
        int Remote_SetICPO_BOEntryStatus(string fbillno, string entryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Remote_SetICPO_BOEntryStatus", ReplyAction="http://tempuri.org/IAPIService/Remote_SetICPO_BOEntryStatusResponse")]
        System.Threading.Tasks.Task<int> Remote_SetICPO_BOEntryStatusAsync(string fbillno, string entryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Save_ICPREntry_List", ReplyAction="http://tempuri.org/IAPIService/Save_ICPREntry_ListResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPRBILLENTRYMODEL))]
        string Save_ICPREntry_List(hn.DataAccess.Model.ICPRBILLENTRYMODEL tModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Save_ICPREntry_List", ReplyAction="http://tempuri.org/IAPIService/Save_ICPREntry_ListResponse")]
        System.Threading.Tasks.Task<string> Save_ICPREntry_ListAsync(hn.DataAccess.Model.ICPRBILLENTRYMODEL tModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Update_FSYNStatus", ReplyAction="http://tempuri.org/IAPIService/Update_FSYNStatusResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(hn.DataAccess.Model.V_ICPOBILLMODEL))]
        int Update_FSYNStatus(hn.DataAccess.Model.ICPOBILLMODEL billMode, int iStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Update_FSYNStatus", ReplyAction="http://tempuri.org/IAPIService/Update_FSYNStatusResponse")]
        System.Threading.Tasks.Task<int> Update_FSYNStatusAsync(hn.DataAccess.Model.ICPOBILLMODEL billMode, int iStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Update_FSYN_Remote_Status", ReplyAction="http://tempuri.org/IAPIService/Update_FSYN_Remote_StatusResponse")]
        int Update_FSYN_Remote_Status(string billMode, int iStatus, string cjbh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIService/Update_FSYN_Remote_Status", ReplyAction="http://tempuri.org/IAPIService/Update_FSYN_Remote_StatusResponse")]
        System.Threading.Tasks.Task<int> Update_FSYN_Remote_StatusAsync(string billMode, int iStatus, string cjbh);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Remote_GetICPOEntry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Remote_GetICPOEntryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strFID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strEntryID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public hn.DataAccess.Model.ICPOBILLMODEL billModel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public hn.DataAccess.Model.ICPOBILLENTRYMODEL entryModel;
        
        public Remote_GetICPOEntryRequest() {
        }
        
        public Remote_GetICPOEntryRequest(string strFID, string strEntryID, hn.DataAccess.Model.ICPOBILLMODEL billModel, hn.DataAccess.Model.ICPOBILLENTRYMODEL entryModel) {
            this.strFID = strFID;
            this.strEntryID = strEntryID;
            this.billModel = billModel;
            this.entryModel = entryModel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Remote_GetICPOEntryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Remote_GetICPOEntryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public hn.DataAccess.Model.ICPOBILLMODEL billModel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public hn.DataAccess.Model.ICPOBILLENTRYMODEL entryModel;
        
        public Remote_GetICPOEntryResponse() {
        }
        
        public Remote_GetICPOEntryResponse(hn.DataAccess.Model.ICPOBILLMODEL billModel, hn.DataAccess.Model.ICPOBILLENTRYMODEL entryModel) {
            this.billModel = billModel;
            this.entryModel = entryModel;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAPIServiceChannel : HN_SYN.WebAPI.IAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class APIServiceClient : System.ServiceModel.ClientBase<HN_SYN.WebAPI.IAPIService>, HN_SYN.WebAPI.IAPIService {
        
        public APIServiceClient() {
        }
        
        public APIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public APIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public APIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public APIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public hn.Core.Model.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<hn.Core.Model.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string ModifyPassword(string id, string oldpwd, string newpwd) {
            return base.Channel.ModifyPassword(id, oldpwd, newpwd);
        }
        
        public System.Threading.Tasks.Task<string> ModifyPasswordAsync(string id, string oldpwd, string newpwd) {
            return base.Channel.ModifyPasswordAsync(id, oldpwd, newpwd);
        }
        
        public hn.DataAccess.Model.SYS_SUBDICSMODEL[] GetDics(string categorycode, string keyword, bool all) {
            return base.Channel.GetDics(categorycode, keyword, all);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.SYS_SUBDICSMODEL[]> GetDicsAsync(string categorycode, string keyword, bool all) {
            return base.Channel.GetDicsAsync(categorycode, keyword, all);
        }
        
        public hn.DataAccess.Model.v_thdModel getTHD(string thdbm) {
            return base.Channel.getTHD(thdbm);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.v_thdModel> getTHDAsync(string thdbm) {
            return base.Channel.getTHDAsync(thdbm);
        }
        
        public decimal getLeftNum_THD(string thdbm) {
            return base.Channel.getLeftNum_THD(thdbm);
        }
        
        public System.Threading.Tasks.Task<decimal> getLeftNum_THDAsync(string thdbm) {
            return base.Channel.getLeftNum_THDAsync(thdbm);
        }
        
        public hn.DataAccess.model.V_PREMISEModel[] GetPremiseList(string keyword) {
            return base.Channel.GetPremiseList(keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.V_PREMISEModel[]> GetPremiseListAsync(string keyword) {
            return base.Channel.GetPremiseListAsync(keyword);
        }
        
        public hn.DataAccess.Model.TB_BrandModel[] GetBrandList(hn.Core.Model.User loginUser) {
            return base.Channel.GetBrandList(loginUser);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.TB_BrandModel[]> GetBrandListAsync(hn.Core.Model.User loginUser) {
            return base.Channel.GetBrandListAsync(loginUser);
        }
        
        public hn.DataAccess.Model.V_CLIENTACCOUNTModel[] GetClientAccountList(string brandid, string keyword) {
            return base.Channel.GetClientAccountList(brandid, keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_CLIENTACCOUNTModel[]> GetClientAccountListAsync(string brandid, string keyword) {
            return base.Channel.GetClientAccountListAsync(brandid, keyword);
        }
        
        public hn.DataAccess.Model.TB_EXPRESSCOMPANYModel[] GetExpressCompanyList(string keyword) {
            return base.Channel.GetExpressCompanyList(keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.TB_EXPRESSCOMPANYModel[]> GetExpressCompanyListAsync(string keyword) {
            return base.Channel.GetExpressCompanyListAsync(keyword);
        }
        
        public hn.DataAccess.model.ProductViewModel[] GetProductList(string keyword) {
            return base.Channel.GetProductList(keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.ProductViewModel[]> GetProductListAsync(string keyword) {
            return base.Channel.GetProductListAsync(keyword);
        }
        
        public hn.DataAccess.Model.SRCModel[] GetSrcList(string productid, string keyword) {
            return base.Channel.GetSrcList(productid, keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.SRCModel[]> GetSrcListAsync(string productid, string keyword) {
            return base.Channel.GetSrcListAsync(productid, keyword);
        }
        
        public hn.DataAccess.model.TB_EBPLModel[] GetProvince() {
            return base.Channel.GetProvince();
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetProvinceAsync() {
            return base.Channel.GetProvinceAsync();
        }
        
        public hn.DataAccess.model.TB_EBPLModel[] GetCity(string provinceid) {
            return base.Channel.GetCity(provinceid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetCityAsync(string provinceid) {
            return base.Channel.GetCityAsync(provinceid);
        }
        
        public hn.DataAccess.model.TB_EBPLModel[] GetDistrict(string cityid) {
            return base.Channel.GetDistrict(cityid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_EBPLModel[]> GetDistrictAsync(string cityid) {
            return base.Channel.GetDistrictAsync(cityid);
        }
        
        public hn.DataAccess.model.ProductViewModel getProductView(string fid) {
            return base.Channel.getProductView(fid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.ProductViewModel> getProductViewAsync(string fid) {
            return base.Channel.getProductViewAsync(fid);
        }
        
        public hn.DataAccess.Model.SYS_SUBDICSMODEL GetSingleDics(string fid) {
            return base.Channel.GetSingleDics(fid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.SYS_SUBDICSMODEL> GetSingleDicsAsync(string fid) {
            return base.Channel.GetSingleDicsAsync(fid);
        }
        
        public hn.DataAccess.model.TB_DELIVER_BASEModel[] GetDeliverBaseList(string brandid, string keyword) {
            return base.Channel.GetDeliverBaseList(brandid, keyword);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_DELIVER_BASEModel[]> GetDeliverBaseListAsync(string brandid, string keyword) {
            return base.Channel.GetDeliverBaseListAsync(brandid, keyword);
        }
        
        public hn.DataAccess.Model.V_CLIENTACCOUNTModel GetClientAccountSingle(string clientid) {
            return base.Channel.GetClientAccountSingle(clientid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_CLIENTACCOUNTModel> GetClientAccountSingleAsync(string clientid) {
            return base.Channel.GetClientAccountSingleAsync(clientid);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanList(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose) {
            return base.Channel.GetPurchasePlanList(loginUser, classarea2name, brand, status, premiseid, billno, startdate, enddate, searchclose);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanListAsync(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose) {
            return base.Channel.GetPurchasePlanListAsync(loginUser, classarea2name, brand, status, premiseid, billno, startdate, enddate, searchclose);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport(hn.Core.Model.User loginUser, string strQuery) {
            return base.Channel.GetPurchasePlanImport(loginUser, strQuery);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImportAsync(hn.Core.Model.User loginUser, string strQuery) {
            return base.Channel.GetPurchasePlanImportAsync(loginUser, strQuery);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport2(hn.Core.Model.User loginUser, string strQuery, string brandid) {
            return base.Channel.GetPurchasePlanImport2(loginUser, strQuery, brandid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImport2Async(hn.Core.Model.User loginUser, string strQuery, string brandid) {
            return base.Channel.GetPurchasePlanImport2Async(loginUser, strQuery, brandid);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLMODEL[] GetPurchasePlanImport3(hn.Core.Model.User loginUser, hn.Common.Cls_query.P_QueryOrder pquery) {
            return base.Channel.GetPurchasePlanImport3(loginUser, pquery);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL[]> GetPurchasePlanImport3Async(hn.Core.Model.User loginUser, hn.Common.Cls_query.P_QueryOrder pquery) {
            return base.Channel.GetPurchasePlanImport3Async(loginUser, pquery);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLMODEL GetPurchasePlanModel(string icprbillid) {
            return base.Channel.GetPurchasePlanModel(icprbillid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLMODEL> GetPurchasePlanModelAsync(string icprbillid) {
            return base.Channel.GetPurchasePlanModelAsync(icprbillid);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] GetPurchasePlanEntryList(string icprbillid, string status) {
            return base.Channel.GetPurchasePlanEntryList(icprbillid, status);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> GetPurchasePlanEntryListAsync(string icprbillid, string status) {
            return base.Channel.GetPurchasePlanEntryListAsync(icprbillid, status);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] GetPurchasePlanEntryByDeliveryList(hn.Core.Model.User loginUser, string productinfo, string classarea2name, string premiseid, string brand, string deliveryaddr, string typename, string billno, int status) {
            return base.Channel.GetPurchasePlanEntryByDeliveryList(loginUser, productinfo, classarea2name, premiseid, brand, deliveryaddr, typename, billno, status);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> GetPurchasePlanEntryByDeliveryListAsync(hn.Core.Model.User loginUser, string productinfo, string classarea2name, string premiseid, string brand, string deliveryaddr, string typename, string billno, int status) {
            return base.Channel.GetPurchasePlanEntryByDeliveryListAsync(loginUser, productinfo, classarea2name, premiseid, brand, deliveryaddr, typename, billno, status);
        }
        
        public bool ConfirmSave(string action, hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser) {
            return base.Channel.ConfirmSave(action, data, loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmSaveAsync(string action, hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser) {
            return base.Channel.ConfirmSaveAsync(action, data, loginUser);
        }
        
        public bool CloseSave(hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.CloseSave(data, loginUser, content);
        }
        
        public System.Threading.Tasks.Task<bool> CloseSaveAsync(hn.DataAccess.Model.ICPRBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.CloseSaveAsync(data, loginUser, content);
        }
        
        public System.Data.DataTable GetStockList(string productname, string stockname, string productnumber, string wdr, string batchno, string brand, string mode, string colorno, bool isfactory, bool istrust) {
            return base.Channel.GetStockList(productname, stockname, productnumber, wdr, batchno, brand, mode, colorno, isfactory, istrust);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetStockListAsync(string productname, string stockname, string productnumber, string wdr, string batchno, string brand, string mode, string colorno, bool isfactory, bool istrust) {
            return base.Channel.GetStockListAsync(productname, stockname, productnumber, wdr, batchno, brand, mode, colorno, isfactory, istrust);
        }
        
        public MApiModel.recApi2.Rootobject GetStockListMN(MApiModel.api2.Rootobject getapi2) {
            return base.Channel.GetStockListMN(getapi2);
        }
        
        public System.Threading.Tasks.Task<MApiModel.recApi2.Rootobject> GetStockListMNAsync(MApiModel.api2.Rootobject getapi2) {
            return base.Channel.GetStockListMNAsync(getapi2);
        }
        
        public hn.DataAccess.Model.TB_ATTACHMENTModel[] GetAttachmentList(string icprbillid) {
            return base.Channel.GetAttachmentList(icprbillid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.TB_ATTACHMENTModel[]> GetAttachmentListAsync(string icprbillid) {
            return base.Channel.GetAttachmentListAsync(icprbillid);
        }
        
        public int UpdateICPRBILL(hn.DataAccess.Model.ICPRBILLMODEL model) {
            return base.Channel.UpdateICPRBILL(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateICPRBILLAsync(hn.DataAccess.Model.ICPRBILLMODEL model) {
            return base.Channel.UpdateICPRBILLAsync(model);
        }
        
        public hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[] RefrshPriceNumberList(string icprbillid, string[] entryids) {
            return base.Channel.RefrshPriceNumberList(icprbillid, entryids);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPRBILLENTRYMODEL[]> RefrshPriceNumberListAsync(string icprbillid, string[] entryids) {
            return base.Channel.RefrshPriceNumberListAsync(icprbillid, entryids);
        }
        
        public hn.DataAccess.model.TB_PRICEPOLICYModel[] GetPriceNumberListByItemID(string itemid) {
            return base.Channel.GetPriceNumberListByItemID(itemid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_PRICEPOLICYModel[]> GetPriceNumberListByItemIDAsync(string itemid) {
            return base.Channel.GetPriceNumberListByItemIDAsync(itemid);
        }
        
        public hn.DataAccess.model.TB_PRICEPOLICYModel[] GetPriceNumberListByBrandID(string itemid) {
            return base.Channel.GetPriceNumberListByBrandID(itemid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.model.TB_PRICEPOLICYModel[]> GetPriceNumberListByBrandIDAsync(string itemid) {
            return base.Channel.GetPriceNumberListByBrandIDAsync(itemid);
        }
        
        public string GetNewBillNo(string billtype) {
            return base.Channel.GetNewBillNo(billtype);
        }
        
        public System.Threading.Tasks.Task<string> GetNewBillNoAsync(string billtype) {
            return base.Channel.GetNewBillNoAsync(billtype);
        }
        
        public bool DeleteGroupBill(string groupno) {
            return base.Channel.DeleteGroupBill(groupno);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupBillAsync(string groupno) {
            return base.Channel.DeleteGroupBillAsync(groupno);
        }
        
        public bool DeliveryBillSave(hn.DataAccess.Model.ICSEOUTBILLMODEL model, hn.DataAccess.Model.ICSEOUTBILLENTRYMODEL[] entrys, bool delivery) {
            return base.Channel.DeliveryBillSave(model, entrys, delivery);
        }
        
        public System.Threading.Tasks.Task<bool> DeliveryBillSaveAsync(hn.DataAccess.Model.ICSEOUTBILLMODEL model, hn.DataAccess.Model.ICSEOUTBILLENTRYMODEL[] entrys, bool delivery) {
            return base.Channel.DeliveryBillSaveAsync(model, entrys, delivery);
        }
        
        public bool UpdateIdentification(string ids, string centent) {
            return base.Channel.UpdateIdentification(ids, centent);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIdentificationAsync(string ids, string centent) {
            return base.Channel.UpdateIdentificationAsync(ids, centent);
        }
        
        public hn.DataAccess.Model.V_ICSEOUTBILLMODEL[] GetDeliveryList(
                    hn.Core.Model.User loginUser, 
                    string brand, 
                    string classarea2name, 
                    string premiseid, 
                    int status, 
                    string car, 
                    string stock, 
                    string account, 
                    string expresscompany, 
                    string factotryno, 
                    string billno, 
                    string groupno, 
                    string projectname, 
                    string startdate, 
                    string enddate, 
                    bool searchclose) {
            return base.Channel.GetDeliveryList(loginUser, brand, classarea2name, premiseid, status, car, stock, account, expresscompany, factotryno, billno, groupno, projectname, startdate, enddate, searchclose);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLMODEL[]> GetDeliveryListAsync(
                    hn.Core.Model.User loginUser, 
                    string brand, 
                    string classarea2name, 
                    string premiseid, 
                    int status, 
                    string car, 
                    string stock, 
                    string account, 
                    string expresscompany, 
                    string factotryno, 
                    string billno, 
                    string groupno, 
                    string projectname, 
                    string startdate, 
                    string enddate, 
                    bool searchclose) {
            return base.Channel.GetDeliveryListAsync(loginUser, brand, classarea2name, premiseid, status, car, stock, account, expresscompany, factotryno, billno, groupno, projectname, startdate, enddate, searchclose);
        }
        
        public hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[] GetDeliveryEntryList(string billid) {
            return base.Channel.GetDeliveryEntryList(billid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[]> GetDeliveryEntryListAsync(string billid) {
            return base.Channel.GetDeliveryEntryListAsync(billid);
        }
        
        public int DeleteDeliveryByIDs(string ids) {
            return base.Channel.DeleteDeliveryByIDs(ids);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDeliveryByIDsAsync(string ids) {
            return base.Channel.DeleteDeliveryByIDsAsync(ids);
        }
        
        public int AuditDeliveryByIDs(string ids, int status, hn.Core.Model.User loginUser) {
            return base.Channel.AuditDeliveryByIDs(ids, status, loginUser);
        }
        
        public System.Threading.Tasks.Task<int> AuditDeliveryByIDsAsync(string ids, int status, hn.Core.Model.User loginUser) {
            return base.Channel.AuditDeliveryByIDsAsync(ids, status, loginUser);
        }
        
        public int AuditAntiDeliveryByIDs(string ids) {
            return base.Channel.AuditAntiDeliveryByIDs(ids);
        }
        
        public System.Threading.Tasks.Task<int> AuditAntiDeliveryByIDsAsync(string ids) {
            return base.Channel.AuditAntiDeliveryByIDsAsync(ids);
        }
        
        public string SyncDeliveryByIDs(string ids) {
            return base.Channel.SyncDeliveryByIDs(ids);
        }
        
        public System.Threading.Tasks.Task<string> SyncDeliveryByIDsAsync(string ids) {
            return base.Channel.SyncDeliveryByIDsAsync(ids);
        }
        
        public string SyncDeliveryByIDsMN(string strJson, string fid) {
            return base.Channel.SyncDeliveryByIDsMN(strJson, fid);
        }
        
        public System.Threading.Tasks.Task<string> SyncDeliveryByIDsMNAsync(string strJson, string fid) {
            return base.Channel.SyncDeliveryByIDsMNAsync(strJson, fid);
        }
        
        public hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[] GetDeliveryEntryByGroupNo(string groupno) {
            return base.Channel.GetDeliveryEntryByGroupNo(groupno);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLENTRYMODEL[]> GetDeliveryEntryByGroupNoAsync(string groupno) {
            return base.Channel.GetDeliveryEntryByGroupNoAsync(groupno);
        }
        
        public hn.DataAccess.Model.V_ICSEOUTBILLMODEL[] GetDeliveryByGroupNo(string groupno) {
            return base.Channel.GetDeliveryByGroupNo(groupno);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICSEOUTBILLMODEL[]> GetDeliveryByGroupNoAsync(string groupno) {
            return base.Channel.GetDeliveryByGroupNoAsync(groupno);
        }
        
        public hn.DataAccess.Model.SRCModel GetSrcModelByItemID(string itemid) {
            return base.Channel.GetSrcModelByItemID(itemid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.SRCModel> GetSrcModelByItemIDAsync(string itemid) {
            return base.Channel.GetSrcModelByItemIDAsync(itemid);
        }
        
        public bool UpdateGetDeliveryEntryData(string id, decimal commitqty) {
            return base.Channel.UpdateGetDeliveryEntryData(id, commitqty);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGetDeliveryEntryDataAsync(string id, decimal commitqty) {
            return base.Channel.UpdateGetDeliveryEntryDataAsync(id, commitqty);
        }
        
        public string GetDismantlingNo(string no) {
            return base.Channel.GetDismantlingNo(no);
        }
        
        public System.Threading.Tasks.Task<string> GetDismantlingNoAsync(string no) {
            return base.Channel.GetDismantlingNoAsync(no);
        }
        
        public string UpdateDeliveryGroupStatus(string ids, int status) {
            return base.Channel.UpdateDeliveryGroupStatus(ids, status);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDeliveryGroupStatusAsync(string ids, int status) {
            return base.Channel.UpdateDeliveryGroupStatusAsync(ids, status);
        }
        
        public string ContractCar(string[] ids) {
            return base.Channel.ContractCar(ids);
        }
        
        public System.Threading.Tasks.Task<string> ContractCarAsync(string[] ids) {
            return base.Channel.ContractCarAsync(ids);
        }
        
        public string SaveICPOBILL(hn.DataAccess.Model.ICPOBILLMODEL ICPOBILL, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] ICPOBILLENTRYList) {
            return base.Channel.SaveICPOBILL(ICPOBILL, ICPOBILLENTRYList);
        }
        
        public System.Threading.Tasks.Task<string> SaveICPOBILLAsync(hn.DataAccess.Model.ICPOBILLMODEL ICPOBILL, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] ICPOBILLENTRYList) {
            return base.Channel.SaveICPOBILLAsync(ICPOBILL, ICPOBILLENTRYList);
        }
        
        public hn.DataAccess.Model.V_ICPOBILLMODEL[] GetOrderList(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose) {
            return base.Channel.GetOrderList(loginUser, classarea2name, brand, status, premiseid, billno, startdate, enddate, searchclose);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPOBILLMODEL[]> GetOrderListAsync(hn.Core.Model.User loginUser, string classarea2name, string brand, int status, string premiseid, string billno, string startdate, string enddate, bool searchclose) {
            return base.Channel.GetOrderListAsync(loginUser, classarea2name, brand, status, premiseid, billno, startdate, enddate, searchclose);
        }
        
        public hn.DataAccess.Model.V_ICPOBILLENTRYMODEL[] GetOrderEntryList(string icprbillid, string status) {
            return base.Channel.GetOrderEntryList(icprbillid, status);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.V_ICPOBILLENTRYMODEL[]> GetOrderEntryListAsync(string icprbillid, string status) {
            return base.Channel.GetOrderEntryListAsync(icprbillid, status);
        }
        
        public hn.DataAccess.Model.ICPOBILLMODEL GetSingleOrder(string icprbillid) {
            return base.Channel.GetSingleOrder(icprbillid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.ICPOBILLMODEL> GetSingleOrderAsync(string icprbillid) {
            return base.Channel.GetSingleOrderAsync(icprbillid);
        }
        
        public hn.DataAccess.Model.ICPO_BOLentryModel[] GeICPO_BOLList(hn.Core.Model.User loginUser, string FPObillno, string Ficbolno, int FSYNCSTATUS, string FACCOUNT, string FITEMID, string startdate, string enddate, bool searchclose) {
            return base.Channel.GeICPO_BOLList(loginUser, FPObillno, Ficbolno, FSYNCSTATUS, FACCOUNT, FITEMID, startdate, enddate, searchclose);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.ICPO_BOLentryModel[]> GeICPO_BOLListAsync(hn.Core.Model.User loginUser, string FPObillno, string Ficbolno, int FSYNCSTATUS, string FACCOUNT, string FITEMID, string startdate, string enddate, bool searchclose) {
            return base.Channel.GeICPO_BOLListAsync(loginUser, FPObillno, Ficbolno, FSYNCSTATUS, FACCOUNT, FITEMID, startdate, enddate, searchclose);
        }
        
        public string GetStartDate_syn() {
            return base.Channel.GetStartDate_syn();
        }
        
        public System.Threading.Tasks.Task<string> GetStartDate_synAsync() {
            return base.Channel.GetStartDate_synAsync();
        }
        
        public string GeICPO_BOLListMN_syn(System.DateTime starttime) {
            return base.Channel.GeICPO_BOLListMN_syn(starttime);
        }
        
        public System.Threading.Tasks.Task<string> GeICPO_BOLListMN_synAsync(System.DateTime starttime) {
            return base.Channel.GeICPO_BOLListMN_synAsync(starttime);
        }
        
        public hn.DataAccess.Model.v_thdModel[] GeICPO_BOLListMN_db(MApiModel.api8.Rootobject getapi8) {
            return base.Channel.GeICPO_BOLListMN_db(getapi8);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.v_thdModel[]> GeICPO_BOLListMN_dbAsync(MApiModel.api8.Rootobject getapi8) {
            return base.Channel.GeICPO_BOLListMN_dbAsync(getapi8);
        }
        
        public bool ConfirmSave_ICPO(string action, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser) {
            return base.Channel.ConfirmSave_ICPO(action, data, loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmSave_ICPOAsync(string action, hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser) {
            return base.Channel.ConfirmSave_ICPOAsync(action, data, loginUser);
        }
        
        public bool CloseSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.CloseSave_ICPO(data, loginUser, content);
        }
        
        public System.Threading.Tasks.Task<bool> CloseSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.CloseSave_ICPOAsync(data, loginUser, content);
        }
        
        public bool AuditSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.AuditSave_ICPO(data, loginUser, content);
        }
        
        public System.Threading.Tasks.Task<bool> AuditSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.AuditSave_ICPOAsync(data, loginUser, content);
        }
        
        public bool UnAuditSave_ICPO(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.UnAuditSave_ICPO(data, loginUser, content);
        }
        
        public System.Threading.Tasks.Task<bool> UnAuditSave_ICPOAsync(hn.DataAccess.Model.ICPOBILLENTRYMODEL[] data, hn.Core.Model.User loginUser, string content) {
            return base.Channel.UnAuditSave_ICPOAsync(data, loginUser, content);
        }
        
        public string Remote_InsertICPOEntry(MApiModel.api3.Rootobject getapi3) {
            return base.Channel.Remote_InsertICPOEntry(getapi3);
        }
        
        public System.Threading.Tasks.Task<string> Remote_InsertICPOEntryAsync(MApiModel.api3.Rootobject getapi3) {
            return base.Channel.Remote_InsertICPOEntryAsync(getapi3);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HN_SYN.WebAPI.Remote_GetICPOEntryResponse HN_SYN.WebAPI.IAPIService.Remote_GetICPOEntry(HN_SYN.WebAPI.Remote_GetICPOEntryRequest request) {
            return base.Channel.Remote_GetICPOEntry(request);
        }
        
        public void Remote_GetICPOEntry(string strFID, string strEntryID, ref hn.DataAccess.Model.ICPOBILLMODEL billModel, ref hn.DataAccess.Model.ICPOBILLENTRYMODEL entryModel) {
            HN_SYN.WebAPI.Remote_GetICPOEntryRequest inValue = new HN_SYN.WebAPI.Remote_GetICPOEntryRequest();
            inValue.strFID = strFID;
            inValue.strEntryID = strEntryID;
            inValue.billModel = billModel;
            inValue.entryModel = entryModel;
            HN_SYN.WebAPI.Remote_GetICPOEntryResponse retVal = ((HN_SYN.WebAPI.IAPIService)(this)).Remote_GetICPOEntry(inValue);
            billModel = retVal.billModel;
            entryModel = retVal.entryModel;
        }
        
        public System.Threading.Tasks.Task<HN_SYN.WebAPI.Remote_GetICPOEntryResponse> Remote_GetICPOEntryAsync(HN_SYN.WebAPI.Remote_GetICPOEntryRequest request) {
            return base.Channel.Remote_GetICPOEntryAsync(request);
        }
        
        public hn.DataAccess.Model.ICPO_BOLentryModel[] Remote_GetICPO_BOEntry(string fbillno, string entryid) {
            return base.Channel.Remote_GetICPO_BOEntry(fbillno, entryid);
        }
        
        public System.Threading.Tasks.Task<hn.DataAccess.Model.ICPO_BOLentryModel[]> Remote_GetICPO_BOEntryAsync(string fbillno, string entryid) {
            return base.Channel.Remote_GetICPO_BOEntryAsync(fbillno, entryid);
        }
        
        public int Remote_SetICPO_BOEntryStatus(string fbillno, string entryid) {
            return base.Channel.Remote_SetICPO_BOEntryStatus(fbillno, entryid);
        }
        
        public System.Threading.Tasks.Task<int> Remote_SetICPO_BOEntryStatusAsync(string fbillno, string entryid) {
            return base.Channel.Remote_SetICPO_BOEntryStatusAsync(fbillno, entryid);
        }
        
        public string Save_ICPREntry_List(hn.DataAccess.Model.ICPRBILLENTRYMODEL tModel) {
            return base.Channel.Save_ICPREntry_List(tModel);
        }
        
        public System.Threading.Tasks.Task<string> Save_ICPREntry_ListAsync(hn.DataAccess.Model.ICPRBILLENTRYMODEL tModel) {
            return base.Channel.Save_ICPREntry_ListAsync(tModel);
        }
        
        public int Update_FSYNStatus(hn.DataAccess.Model.ICPOBILLMODEL billMode, int iStatus) {
            return base.Channel.Update_FSYNStatus(billMode, iStatus);
        }
        
        public System.Threading.Tasks.Task<int> Update_FSYNStatusAsync(hn.DataAccess.Model.ICPOBILLMODEL billMode, int iStatus) {
            return base.Channel.Update_FSYNStatusAsync(billMode, iStatus);
        }
        
        public int Update_FSYN_Remote_Status(string billMode, int iStatus, string cjbh) {
            return base.Channel.Update_FSYN_Remote_Status(billMode, iStatus, cjbh);
        }
        
        public System.Threading.Tasks.Task<int> Update_FSYN_Remote_StatusAsync(string billMode, int iStatus, string cjbh) {
            return base.Channel.Update_FSYN_Remote_StatusAsync(billMode, iStatus, cjbh);
        }
    }
}
